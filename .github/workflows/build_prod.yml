name: Igor's githubapp (staging) # comment1
on: 
    push:
    workflow_dispatch:

#env:
#  SCRIBE_URL: "https://api.staging.hub.scribesecurity.com/scribe-proxy"
#  SCRIBE_LOGIN_URL: "https://scribesecurity-staging.us.auth0.com"
#  SCRIBE_AUDIENCE: "api.staging.scribesecurity.com"

jobs:
  
  scribe-report-test:
    runs-on: ubuntu-latest
    steps:
      - name: create file and Docker
        run: | 
          echo `date` > tmp.txt
          echo "FROM scratch" > Dockerfile
          echo "COPY . ." >> Dockerfile
          docker build -t date:latest .
 
      - uses: actions/checkout@v3
      
      - name: install opa
        run: | 
          curl -L -o opa https://openpolicyagent.org/downloads/v0.46.1/opa_linux_amd64_static
          chmod +x ./opa
          echo "installed"
          whereis opa
          ./opa version
      
      
      - name: Clone GuillaumeFalourd/formulas-training PRIVATE repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
            owner: 'scribe-security'
            repository: 'GitHub-Posture'
            access-token: ${{ secrets.GH_ACCESS_TOKEN }}
      
            
      - name: Generate cyclonedx json SBOM
        id: gensbom_json
        uses: scribe-security/actions/gensbom/bom@master
        with:
          type: docker            
          target: date:latest
          format: json
          verbose: 2
          force: true
          scribe-enable: true
          product-key: f9d47033-693e-41fd-87b2-ddb2922577ed
          scribe-client-id: NvYfX1ggzOxm5RJLLQ8o3eKq7qLhpvnmO
          scribe-client-secret: RBORO7NbbYiyll-zltUxRvx4_4k0dAa3as5rdrPThPCyfqYJrBkl37TfmqpnoxBFv
          scribe-url: ${{ env.SCRIBE_URL }}
          scribe-login-url: ${{ env.SCRIBE_LOGIN_URL }}
          scribe-audience: ${{ env.SCRIBE_AUDIENCE }}

      - name: Generate slsa prov statement
        id: gensbom_slsa
        uses: scribe-security/actions/gensbom/bom@master
        with:
          type: docker
          target: 'date:latest'
          format: statement-slsa
          product-key: f9d47033-693e-41fd-87b2-ddb2922577ed
          verbose: 2
          force: true
          
      - name: generate slsa report
        run: | # echo "SLSA is great" > slsa.json
          cat input.json | sed "s/GH_TOKEN/${{ secrets.GH_ACCESS_TOKEN }}/" | ./opa eval -I --format=pretty -b GitHub-Posture/github data.github.slsa.report > slsa.json
          cat slsa.json

      - uses: actions/upload-artifact@v2
        with:
          name: provenance
          path: ${{ steps.gensbom_slsa.outputs.OUTPUT_PATH }}
          
      - uses: actions/upload-artifact@v2
        with:
          name: slsa_report
          path: slsa.json
